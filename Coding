1) Help Sheeba out     10 marks

Sheeba was asked by a Recruiter to write down 100 numbers (1-100) randomly 

but making sure that no number is repeated twice. At the end, the Recruiter found 

out that Sheeba had done her work perfectly, but committed just one mistake of 

repeating a number twice. Recruiter asked Sheeba that she recruiter her only 

under one condition! If Sheeba is able to find out the only number which she is 

repeated in an optimised manner.

Can you write a pseudocode, which can help Sheeba to find out the number which 

got repeated twice?
Ans=
void printRepeating(int arr[], int size)
{
  int *count = (int *)calloc(sizeof(int), (size - 2));
  int i;
   
  printf(" Repeating elements are ");
  for(i = 0; i < size; i++)
  {  
    if(count[arr[i]] == 1)
      printf(" %d ", arr[i]);
    else
     count[arr[i]]++;
  }    
}     
 

2) Design a website for a travel company      15 marks

(Having the following requirements)

a. User will have to select an origin and destination location.

b. User will have to select from and to date.

c. Display some high resolution images as preview of the location when user 

d. Show list of all travel destinations available for the selected time frame as hits submit.

    -> Recommendation (List size 1<=N<=50).

e. Show fares and other expenses.

You are supposed to write code in HTML and JavaScript. Syntax is not a problem, 

your understanding of the problem statement and approach to the same is of primary concern.
Ans=
<html>
<head>
<align="center"> Travel Company</br>
//destination
<inputtype='button'> menu on button type()

3) Closest to zero     20 Marks

This problem is also called minimum absolute sum pair. You are given an array of integers, 

containing both +ve and -ve numbers. You need to find the two elements such that their sum is 

closest to zero. eg. Array [15, 5, -20, 30, -45] Output should be 15, -20.

Note: We want the sum to be closest to zero not minimum. The minimum in the above example 

would be (-20, -45), but that is incorrect.
Ans= 
void minAbsumPair(int arr[], int n)
{
    int m, s , min_sum, sum = 0, min_m, min_s;
 
  
    if(n < 2)
    {
        printf("Invalid Input");
        return;
    } 
 
    /* Sort elements */
    quickSort(arr, 0, n-1);
 
 
    /* Start looking for the pair  */
    m = 0; s= n-1;
    min_sum = arr[m] + arr[s];
    min_m = m; 
    min_s= s; 
     
    while(m< s)
    {
        sum = arr[m] + arr[s];
 
        /*If abs(sum) is less then*/
        if(abs(sum) < abs(min_sum))
        {
            min_sum = sum;
            min_m = m;
            min_s = s;
        }
        if(sum < 0)
            m++;
        else
            s--;
 
    }
 
    printf(" The two elements whose sum is minimum are %d and %d",
    arr[min_m], arr[min_s]);
}


**** End of paper, Thank You! ****
